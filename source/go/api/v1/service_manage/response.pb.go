// Code generated by protoc-gen-go. DO NOT EDIT.
// source: response.proto

package service_manage // import "github.com/polarismesh/specification/source/go/api/v1/service_manage"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import fault_tolerance "github.com/polarismesh/specification/source/go/api/v1/fault_tolerance"
import model "github.com/polarismesh/specification/source/go/api/v1/model"
import traffic_manage "github.com/polarismesh/specification/source/go/api/v1/traffic_manage"
import anypb "google.golang.org/protobuf/types/known/anypb"
import wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DiscoverResponse_DiscoverResponseType int32

const (
	DiscoverResponse_UNKNOWN         DiscoverResponse_DiscoverResponseType = 0
	DiscoverResponse_INSTANCE        DiscoverResponse_DiscoverResponseType = 1
	DiscoverResponse_CLUSTER         DiscoverResponse_DiscoverResponseType = 2
	DiscoverResponse_ROUTING         DiscoverResponse_DiscoverResponseType = 3
	DiscoverResponse_RATE_LIMIT      DiscoverResponse_DiscoverResponseType = 4
	DiscoverResponse_CIRCUIT_BREAKER DiscoverResponse_DiscoverResponseType = 5
	DiscoverResponse_SERVICES        DiscoverResponse_DiscoverResponseType = 6
	DiscoverResponse_NAMESPACES      DiscoverResponse_DiscoverResponseType = 12
	DiscoverResponse_FAULT_DETECTOR  DiscoverResponse_DiscoverResponseType = 13
)

var DiscoverResponse_DiscoverResponseType_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "INSTANCE",
	2:  "CLUSTER",
	3:  "ROUTING",
	4:  "RATE_LIMIT",
	5:  "CIRCUIT_BREAKER",
	6:  "SERVICES",
	12: "NAMESPACES",
	13: "FAULT_DETECTOR",
}
var DiscoverResponse_DiscoverResponseType_value = map[string]int32{
	"UNKNOWN":         0,
	"INSTANCE":        1,
	"CLUSTER":         2,
	"ROUTING":         3,
	"RATE_LIMIT":      4,
	"CIRCUIT_BREAKER": 5,
	"SERVICES":        6,
	"NAMESPACES":      12,
	"FAULT_DETECTOR":  13,
}

func (x DiscoverResponse_DiscoverResponseType) String() string {
	return proto.EnumName(DiscoverResponse_DiscoverResponseType_name, int32(x))
}
func (DiscoverResponse_DiscoverResponseType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_response_0eea11a142f1ff28, []int{3, 0}
}

type Response struct {
	Code                 *wrapperspb.UInt32Value         `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Info                 *wrapperspb.StringValue         `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	Client               *Client                         `protobuf:"bytes,3,opt,name=client,proto3" json:"client,omitempty"`
	Namespace            *model.Namespace                `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Service              *Service                        `protobuf:"bytes,5,opt,name=service,proto3" json:"service,omitempty"`
	Instance             *Instance                       `protobuf:"bytes,6,opt,name=instance,proto3" json:"instance,omitempty"`
	Routing              *traffic_manage.Routing         `protobuf:"bytes,7,opt,name=routing,proto3" json:"routing,omitempty"`
	Alias                *ServiceAlias                   `protobuf:"bytes,8,opt,name=alias,proto3" json:"alias,omitempty"`
	RateLimit            *traffic_manage.Rule            `protobuf:"bytes,9,opt,name=rateLimit,proto3" json:"rateLimit,omitempty"`
	CircuitBreaker       *fault_tolerance.CircuitBreaker `protobuf:"bytes,10,opt,name=circuitBreaker,proto3" json:"circuitBreaker,omitempty"`
	ConfigRelease        *ConfigRelease                  `protobuf:"bytes,11,opt,name=configRelease,proto3" json:"configRelease,omitempty"`
	InstanceLabels       *InstanceLabels                 `protobuf:"bytes,28,opt,name=instanceLabels,proto3" json:"instanceLabels,omitempty"`
	Data                 *anypb.Any                      `protobuf:"bytes,29,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_response_0eea11a142f1ff28, []int{0}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCode() *wrapperspb.UInt32Value {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Response) GetInfo() *wrapperspb.StringValue {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Response) GetClient() *Client {
	if m != nil {
		return m.Client
	}
	return nil
}

func (m *Response) GetNamespace() *model.Namespace {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *Response) GetService() *Service {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *Response) GetInstance() *Instance {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (m *Response) GetRouting() *traffic_manage.Routing {
	if m != nil {
		return m.Routing
	}
	return nil
}

func (m *Response) GetAlias() *ServiceAlias {
	if m != nil {
		return m.Alias
	}
	return nil
}

func (m *Response) GetRateLimit() *traffic_manage.Rule {
	if m != nil {
		return m.RateLimit
	}
	return nil
}

func (m *Response) GetCircuitBreaker() *fault_tolerance.CircuitBreaker {
	if m != nil {
		return m.CircuitBreaker
	}
	return nil
}

func (m *Response) GetConfigRelease() *ConfigRelease {
	if m != nil {
		return m.ConfigRelease
	}
	return nil
}

func (m *Response) GetInstanceLabels() *InstanceLabels {
	if m != nil {
		return m.InstanceLabels
	}
	return nil
}

func (m *Response) GetData() *anypb.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type BatchWriteResponse struct {
	Code                 *wrapperspb.UInt32Value `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Info                 *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	Size                 *wrapperspb.UInt32Value `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Responses            []*Response             `protobuf:"bytes,4,rep,name=responses,proto3" json:"responses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *BatchWriteResponse) Reset()         { *m = BatchWriteResponse{} }
func (m *BatchWriteResponse) String() string { return proto.CompactTextString(m) }
func (*BatchWriteResponse) ProtoMessage()    {}
func (*BatchWriteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_response_0eea11a142f1ff28, []int{1}
}
func (m *BatchWriteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchWriteResponse.Unmarshal(m, b)
}
func (m *BatchWriteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchWriteResponse.Marshal(b, m, deterministic)
}
func (dst *BatchWriteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchWriteResponse.Merge(dst, src)
}
func (m *BatchWriteResponse) XXX_Size() int {
	return xxx_messageInfo_BatchWriteResponse.Size(m)
}
func (m *BatchWriteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchWriteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchWriteResponse proto.InternalMessageInfo

func (m *BatchWriteResponse) GetCode() *wrapperspb.UInt32Value {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *BatchWriteResponse) GetInfo() *wrapperspb.StringValue {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *BatchWriteResponse) GetSize() *wrapperspb.UInt32Value {
	if m != nil {
		return m.Size
	}
	return nil
}

func (m *BatchWriteResponse) GetResponses() []*Response {
	if m != nil {
		return m.Responses
	}
	return nil
}

type BatchQueryResponse struct {
	Code                 *wrapperspb.UInt32Value   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Info                 *wrapperspb.StringValue   `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	Amount               *wrapperspb.UInt32Value   `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Size                 *wrapperspb.UInt32Value   `protobuf:"bytes,4,opt,name=size,proto3" json:"size,omitempty"`
	Namespaces           []*model.Namespace        `protobuf:"bytes,5,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	Services             []*Service                `protobuf:"bytes,6,rep,name=services,proto3" json:"services,omitempty"`
	Instances            []*Instance               `protobuf:"bytes,7,rep,name=instances,proto3" json:"instances,omitempty"`
	Routings             []*traffic_manage.Routing `protobuf:"bytes,8,rep,name=routings,proto3" json:"routings,omitempty"`
	Aliases              []*ServiceAlias           `protobuf:"bytes,9,rep,name=aliases,proto3" json:"aliases,omitempty"`
	RateLimits           []*traffic_manage.Rule    `protobuf:"bytes,10,rep,name=rateLimits,proto3" json:"rateLimits,omitempty"`
	ConfigWithServices   []*ConfigWithService      `protobuf:"bytes,11,rep,name=configWithServices,proto3" json:"configWithServices,omitempty"`
	Clients              []*Client                 `protobuf:"bytes,21,rep,name=clients,proto3" json:"clients,omitempty"`
	Data                 []*anypb.Any              `protobuf:"bytes,22,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *BatchQueryResponse) Reset()         { *m = BatchQueryResponse{} }
func (m *BatchQueryResponse) String() string { return proto.CompactTextString(m) }
func (*BatchQueryResponse) ProtoMessage()    {}
func (*BatchQueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_response_0eea11a142f1ff28, []int{2}
}
func (m *BatchQueryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchQueryResponse.Unmarshal(m, b)
}
func (m *BatchQueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchQueryResponse.Marshal(b, m, deterministic)
}
func (dst *BatchQueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchQueryResponse.Merge(dst, src)
}
func (m *BatchQueryResponse) XXX_Size() int {
	return xxx_messageInfo_BatchQueryResponse.Size(m)
}
func (m *BatchQueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchQueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchQueryResponse proto.InternalMessageInfo

func (m *BatchQueryResponse) GetCode() *wrapperspb.UInt32Value {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *BatchQueryResponse) GetInfo() *wrapperspb.StringValue {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *BatchQueryResponse) GetAmount() *wrapperspb.UInt32Value {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *BatchQueryResponse) GetSize() *wrapperspb.UInt32Value {
	if m != nil {
		return m.Size
	}
	return nil
}

func (m *BatchQueryResponse) GetNamespaces() []*model.Namespace {
	if m != nil {
		return m.Namespaces
	}
	return nil
}

func (m *BatchQueryResponse) GetServices() []*Service {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *BatchQueryResponse) GetInstances() []*Instance {
	if m != nil {
		return m.Instances
	}
	return nil
}

func (m *BatchQueryResponse) GetRoutings() []*traffic_manage.Routing {
	if m != nil {
		return m.Routings
	}
	return nil
}

func (m *BatchQueryResponse) GetAliases() []*ServiceAlias {
	if m != nil {
		return m.Aliases
	}
	return nil
}

func (m *BatchQueryResponse) GetRateLimits() []*traffic_manage.Rule {
	if m != nil {
		return m.RateLimits
	}
	return nil
}

func (m *BatchQueryResponse) GetConfigWithServices() []*ConfigWithService {
	if m != nil {
		return m.ConfigWithServices
	}
	return nil
}

func (m *BatchQueryResponse) GetClients() []*Client {
	if m != nil {
		return m.Clients
	}
	return nil
}

func (m *BatchQueryResponse) GetData() []*anypb.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type DiscoverResponse struct {
	Code                 *wrapperspb.UInt32Value               `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Info                 *wrapperspb.StringValue               `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	Type                 DiscoverResponse_DiscoverResponseType `protobuf:"varint,3,opt,name=type,proto3,enum=v1.DiscoverResponse_DiscoverResponseType" json:"type,omitempty"`
	Service              *Service                              `protobuf:"bytes,4,opt,name=service,proto3" json:"service,omitempty"`
	Instances            []*Instance                           `protobuf:"bytes,5,rep,name=instances,proto3" json:"instances,omitempty"`
	Routing              *traffic_manage.Routing               `protobuf:"bytes,6,opt,name=routing,proto3" json:"routing,omitempty"`
	RateLimit            *traffic_manage.RateLimit             `protobuf:"bytes,7,opt,name=rateLimit,proto3" json:"rateLimit,omitempty"`
	CircuitBreaker       *fault_tolerance.CircuitBreaker       `protobuf:"bytes,8,opt,name=circuitBreaker,proto3" json:"circuitBreaker,omitempty"`
	Services             []*Service                            `protobuf:"bytes,9,rep,name=services,proto3" json:"services,omitempty"`
	Namespaces           []*model.Namespace                    `protobuf:"bytes,10,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	FaultDetector        *fault_tolerance.FaultDetector        `protobuf:"bytes,11,opt,name=faultDetector,proto3" json:"faultDetector,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *DiscoverResponse) Reset()         { *m = DiscoverResponse{} }
func (m *DiscoverResponse) String() string { return proto.CompactTextString(m) }
func (*DiscoverResponse) ProtoMessage()    {}
func (*DiscoverResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_response_0eea11a142f1ff28, []int{3}
}
func (m *DiscoverResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoverResponse.Unmarshal(m, b)
}
func (m *DiscoverResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoverResponse.Marshal(b, m, deterministic)
}
func (dst *DiscoverResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoverResponse.Merge(dst, src)
}
func (m *DiscoverResponse) XXX_Size() int {
	return xxx_messageInfo_DiscoverResponse.Size(m)
}
func (m *DiscoverResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoverResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoverResponse proto.InternalMessageInfo

func (m *DiscoverResponse) GetCode() *wrapperspb.UInt32Value {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *DiscoverResponse) GetInfo() *wrapperspb.StringValue {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *DiscoverResponse) GetType() DiscoverResponse_DiscoverResponseType {
	if m != nil {
		return m.Type
	}
	return DiscoverResponse_UNKNOWN
}

func (m *DiscoverResponse) GetService() *Service {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *DiscoverResponse) GetInstances() []*Instance {
	if m != nil {
		return m.Instances
	}
	return nil
}

func (m *DiscoverResponse) GetRouting() *traffic_manage.Routing {
	if m != nil {
		return m.Routing
	}
	return nil
}

func (m *DiscoverResponse) GetRateLimit() *traffic_manage.RateLimit {
	if m != nil {
		return m.RateLimit
	}
	return nil
}

func (m *DiscoverResponse) GetCircuitBreaker() *fault_tolerance.CircuitBreaker {
	if m != nil {
		return m.CircuitBreaker
	}
	return nil
}

func (m *DiscoverResponse) GetServices() []*Service {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *DiscoverResponse) GetNamespaces() []*model.Namespace {
	if m != nil {
		return m.Namespaces
	}
	return nil
}

func (m *DiscoverResponse) GetFaultDetector() *fault_tolerance.FaultDetector {
	if m != nil {
		return m.FaultDetector
	}
	return nil
}

type OptionSwitch struct {
	Options              map[string]string `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OptionSwitch) Reset()         { *m = OptionSwitch{} }
func (m *OptionSwitch) String() string { return proto.CompactTextString(m) }
func (*OptionSwitch) ProtoMessage()    {}
func (*OptionSwitch) Descriptor() ([]byte, []int) {
	return fileDescriptor_response_0eea11a142f1ff28, []int{4}
}
func (m *OptionSwitch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OptionSwitch.Unmarshal(m, b)
}
func (m *OptionSwitch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OptionSwitch.Marshal(b, m, deterministic)
}
func (dst *OptionSwitch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OptionSwitch.Merge(dst, src)
}
func (m *OptionSwitch) XXX_Size() int {
	return xxx_messageInfo_OptionSwitch.Size(m)
}
func (m *OptionSwitch) XXX_DiscardUnknown() {
	xxx_messageInfo_OptionSwitch.DiscardUnknown(m)
}

var xxx_messageInfo_OptionSwitch proto.InternalMessageInfo

func (m *OptionSwitch) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

type InstanceLabels struct {
	Labels               map[string]*model.StringList `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *InstanceLabels) Reset()         { *m = InstanceLabels{} }
func (m *InstanceLabels) String() string { return proto.CompactTextString(m) }
func (*InstanceLabels) ProtoMessage()    {}
func (*InstanceLabels) Descriptor() ([]byte, []int) {
	return fileDescriptor_response_0eea11a142f1ff28, []int{5}
}
func (m *InstanceLabels) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceLabels.Unmarshal(m, b)
}
func (m *InstanceLabels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceLabels.Marshal(b, m, deterministic)
}
func (dst *InstanceLabels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceLabels.Merge(dst, src)
}
func (m *InstanceLabels) XXX_Size() int {
	return xxx_messageInfo_InstanceLabels.Size(m)
}
func (m *InstanceLabels) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceLabels.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceLabels proto.InternalMessageInfo

func (m *InstanceLabels) GetLabels() map[string]*model.StringList {
	if m != nil {
		return m.Labels
	}
	return nil
}

func init() {
	proto.RegisterType((*Response)(nil), "v1.Response")
	proto.RegisterType((*BatchWriteResponse)(nil), "v1.BatchWriteResponse")
	proto.RegisterType((*BatchQueryResponse)(nil), "v1.BatchQueryResponse")
	proto.RegisterType((*DiscoverResponse)(nil), "v1.DiscoverResponse")
	proto.RegisterType((*OptionSwitch)(nil), "v1.OptionSwitch")
	proto.RegisterMapType((map[string]string)(nil), "v1.OptionSwitch.OptionsEntry")
	proto.RegisterType((*InstanceLabels)(nil), "v1.InstanceLabels")
	proto.RegisterMapType((map[string]*model.StringList)(nil), "v1.InstanceLabels.LabelsEntry")
	proto.RegisterEnum("v1.DiscoverResponse_DiscoverResponseType", DiscoverResponse_DiscoverResponseType_name, DiscoverResponse_DiscoverResponseType_value)
}

func init() { proto.RegisterFile("response.proto", fileDescriptor_response_0eea11a142f1ff28) }

var fileDescriptor_response_0eea11a142f1ff28 = []byte{
	// 1128 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0xae, 0x6c, 0xea, 0x6f, 0xf4, 0x13, 0x76, 0xe3, 0x14, 0xac, 0xe0, 0x04, 0x81, 0x90, 0xa6,
	0xae, 0x82, 0x4a, 0xb1, 0x53, 0xd4, 0x85, 0x81, 0x1e, 0xf4, 0x43, 0xa7, 0xac, 0x65, 0x39, 0x5d,
	0x49, 0x76, 0xd1, 0x8b, 0xb0, 0xa6, 0xd7, 0xf2, 0x22, 0x14, 0x29, 0x70, 0x29, 0x05, 0xea, 0xa9,
	0x40, 0xef, 0xb9, 0xf4, 0xdd, 0xfa, 0x00, 0x3d, 0xf5, 0x31, 0x8a, 0x5d, 0x2e, 0x45, 0x4a, 0x76,
	0xe5, 0x9c, 0x7c, 0xb1, 0xb5, 0xf3, 0x7d, 0x33, 0xbb, 0x33, 0x3b, 0xdf, 0x2c, 0xa1, 0xec, 0x53,
	0x3e, 0xf5, 0x5c, 0x4e, 0xeb, 0x53, 0xdf, 0x0b, 0x3c, 0xb4, 0x35, 0xdf, 0xaf, 0x3c, 0x1b, 0x7b,
	0xde, 0xd8, 0xa1, 0x0d, 0x69, 0xb9, 0x9c, 0x5d, 0x37, 0x3e, 0xf8, 0x64, 0x3a, 0xa5, 0x3e, 0x0f,
	0x39, 0x95, 0x2f, 0xd7, 0x71, 0xe2, 0x2e, 0x14, 0xf4, 0xc8, 0x25, 0x13, 0xca, 0xa7, 0xc4, 0x56,
	0xf1, 0x2a, 0x25, 0x4e, 0xfd, 0x39, 0x8b, 0x97, 0xbe, 0x37, 0x0b, 0x98, 0x3b, 0x8e, 0xe8, 0x3e,
	0x09, 0xa8, 0xc3, 0x26, 0x2c, 0x50, 0x86, 0x1d, 0x9b, 0xf9, 0xf6, 0x8c, 0x05, 0x97, 0x3e, 0x25,
	0xef, 0xa9, 0xaf, 0xac, 0x85, 0x89, 0x77, 0x45, 0x1d, 0xb5, 0x28, 0xda, 0x0e, 0xa3, 0x6e, 0xe4,
	0xf0, 0xd8, 0xf6, 0xdc, 0x6b, 0x36, 0xf6, 0xa9, 0x43, 0x49, 0x94, 0x44, 0x65, 0xe7, 0x9a, 0xcc,
	0x9c, 0x60, 0x74, 0x45, 0x03, 0x6a, 0x07, 0x9e, 0x8a, 0x52, 0xfd, 0x57, 0x83, 0x1c, 0x56, 0xd9,
	0xa2, 0xd7, 0xa0, 0xd9, 0xde, 0x15, 0x35, 0x52, 0xcf, 0x53, 0x7b, 0x85, 0x83, 0xdd, 0x7a, 0x98,
	0x52, 0x3d, 0x4a, 0xa9, 0x3e, 0xb4, 0xdc, 0xe0, 0xcd, 0xc1, 0x39, 0x71, 0x66, 0x14, 0x4b, 0xa6,
	0xf0, 0x60, 0xee, 0xb5, 0x67, 0x6c, 0xfd, 0x8f, 0x47, 0x3f, 0xf0, 0x99, 0x3b, 0x56, 0x1e, 0x82,
	0x89, 0xaa, 0x90, 0x09, 0xcf, 0x6a, 0x6c, 0x4b, 0x1f, 0xa8, 0xcf, 0xf7, 0xeb, 0x6d, 0x69, 0xc1,
	0x0a, 0x41, 0xaf, 0x20, 0xbf, 0x2c, 0x99, 0xa1, 0x49, 0x5a, 0x49, 0xd0, 0x7a, 0x91, 0x11, 0xc7,
	0x38, 0xfa, 0x0a, 0xb2, 0xaa, 0x9c, 0x46, 0x5a, 0x52, 0x0b, 0x82, 0xda, 0x0f, 0x4d, 0x38, 0xc2,
	0xd0, 0x1e, 0xe4, 0x98, 0xcb, 0x03, 0xe2, 0xda, 0xd4, 0xc8, 0x48, 0x5e, 0x51, 0xf0, 0x2c, 0x65,
	0xc3, 0x4b, 0x54, 0x04, 0x54, 0x17, 0x62, 0x64, 0xe3, 0x80, 0x38, 0x34, 0xe1, 0x08, 0x43, 0x2f,
	0x21, 0x4d, 0x1c, 0x46, 0xb8, 0x91, 0x93, 0x24, 0x3d, 0xb1, 0x6b, 0x53, 0xd8, 0x71, 0x08, 0xa3,
	0x97, 0x90, 0x17, 0x17, 0xda, 0x15, 0x17, 0x6a, 0xe4, 0x25, 0x37, 0x27, 0x03, 0xce, 0x1c, 0x8a,
	0x63, 0x08, 0x1d, 0x41, 0x59, 0xdd, 0x73, 0x2b, 0xbc, 0x67, 0x03, 0x24, 0x19, 0xc9, 0x02, 0xad,
	0x20, 0x78, 0x8d, 0x89, 0x0e, 0xa1, 0x14, 0x5e, 0x39, 0x0e, 0xaf, 0xdc, 0x28, 0x48, 0xd7, 0xcf,
	0xa5, 0x6b, 0x12, 0xc0, 0xab, 0x3c, 0xb1, 0x69, 0x94, 0x77, 0x97, 0x5c, 0x52, 0x87, 0x1b, 0xbb,
	0xf1, 0xa6, 0xd6, 0x0a, 0x82, 0xd7, 0x98, 0x68, 0x0f, 0xb4, 0x2b, 0x12, 0x10, 0xe3, 0xa9, 0xf4,
	0xd8, 0xb9, 0x75, 0xf7, 0x4d, 0x77, 0x81, 0x25, 0xe3, 0x67, 0x2d, 0x57, 0xd4, 0x77, 0xab, 0x7f,
	0xa7, 0x00, 0xb5, 0x48, 0x60, 0xdf, 0x5c, 0xf8, 0x2c, 0xa0, 0x0f, 0xda, 0x74, 0xaf, 0x41, 0xe3,
	0xec, 0x77, 0xaa, 0x5a, 0xee, 0x9e, 0x3d, 0x04, 0x13, 0xd5, 0x20, 0x1f, 0x0d, 0x01, 0x6e, 0x68,
	0xcf, 0xb7, 0xa3, 0x7e, 0x89, 0x8e, 0x8d, 0x63, 0xb8, 0xfa, 0x47, 0x5a, 0x25, 0xf6, 0xcb, 0x8c,
	0xfa, 0x8b, 0x07, 0x4d, 0xec, 0x3b, 0xc8, 0x90, 0x89, 0x37, 0x5b, 0xaa, 0x69, 0xf3, 0x2e, 0x8a,
	0xbb, 0x2c, 0x87, 0xf6, 0xc9, 0xe5, 0xf8, 0x16, 0x60, 0xa9, 0x38, 0x6e, 0xa4, 0x65, 0x3d, 0xd6,
	0x24, 0x99, 0x20, 0xa0, 0xaf, 0x21, 0xa7, 0x74, 0xc7, 0x8d, 0x8c, 0x24, 0xaf, 0x88, 0x72, 0x09,
	0x8a, 0x32, 0x47, 0x5d, 0xc5, 0x8d, 0x6c, 0x5c, 0xe6, 0xa5, 0x2c, 0x63, 0x58, 0x04, 0x55, 0xda,
	0x13, 0x9a, 0xdb, 0x5e, 0x17, 0xe6, 0x12, 0x44, 0x35, 0xc8, 0x4a, 0xe9, 0x51, 0x6e, 0xe4, 0x25,
	0xef, 0xb6, 0x36, 0x23, 0x02, 0xda, 0x03, 0x58, 0x4a, 0x90, 0x1b, 0x20, 0xe9, 0xb1, 0x3c, 0x13,
	0x18, 0x32, 0x01, 0x85, 0xda, 0xb9, 0x60, 0xc1, 0x4d, 0x3f, 0xca, 0xae, 0x20, 0x3d, 0x9e, 0xc4,
	0x42, 0x4b, 0xa0, 0xf8, 0x0e, 0x07, 0xf4, 0x02, 0xb2, 0xe1, 0x94, 0xe3, 0xc6, 0x13, 0xe9, 0x9b,
	0x1c, 0x80, 0x11, 0xb4, 0xd4, 0xd6, 0x17, 0x92, 0x72, 0x9f, 0xb6, 0x9e, 0x54, 0x3f, 0x66, 0x40,
	0xef, 0x30, 0x6e, 0x7b, 0x73, 0xea, 0x3f, 0x68, 0x03, 0xfe, 0x08, 0x5a, 0xb0, 0x98, 0x86, 0xca,
	0x2a, 0x1f, 0x7c, 0x23, 0x72, 0x59, 0x3f, 0xc7, 0x2d, 0xc3, 0x60, 0x31, 0xa5, 0x58, 0xba, 0x25,
	0x87, 0xb7, 0xb6, 0x61, 0x78, 0xaf, 0xb4, 0x49, 0x7a, 0x73, 0x9b, 0x24, 0xc6, 0x77, 0x66, 0xc3,
	0xf8, 0x7e, 0x95, 0x1c, 0xcb, 0xd9, 0xf8, 0x8d, 0xc1, 0x91, 0x71, 0xf3, 0x6c, 0xce, 0x7d, 0xf2,
	0x6c, 0x4e, 0x6a, 0x21, 0xbf, 0x49, 0x0b, 0xab, 0x1a, 0x83, 0xfb, 0x34, 0x76, 0x08, 0x25, 0xf9,
	0xa2, 0x77, 0xd4, 0x83, 0x9e, 0x9c, 0xf9, 0xc7, 0x49, 0x00, 0xaf, 0xf2, 0xaa, 0xff, 0xa4, 0x60,
	0xe7, 0xae, 0x2b, 0x41, 0x05, 0xc8, 0x0e, 0x7b, 0x27, 0xbd, 0xb3, 0x8b, 0x9e, 0xfe, 0x19, 0x2a,
	0x42, 0xce, 0xea, 0xf5, 0x07, 0xcd, 0x5e, 0xdb, 0xd4, 0x53, 0x02, 0x6a, 0x77, 0x87, 0xfd, 0x81,
	0x89, 0xf5, 0x2d, 0xb1, 0xc0, 0x67, 0xc3, 0x81, 0xd5, 0x7b, 0xab, 0x6f, 0xa3, 0x32, 0x00, 0x6e,
	0x0e, 0xcc, 0x51, 0xd7, 0x3a, 0xb5, 0x06, 0xba, 0x86, 0x1e, 0xc3, 0xa3, 0xb6, 0x85, 0xdb, 0x43,
	0x6b, 0x30, 0x6a, 0x61, 0xb3, 0x79, 0x62, 0x62, 0x3d, 0x2d, 0x82, 0xf5, 0x4d, 0x7c, 0x6e, 0xb5,
	0xcd, 0xbe, 0x9e, 0x11, 0x2e, 0xbd, 0xe6, 0xa9, 0xd9, 0x7f, 0xd7, 0x14, 0xeb, 0x22, 0x42, 0x50,
	0x3e, 0x6e, 0x0e, 0xbb, 0x83, 0x51, 0xc7, 0x1c, 0x98, 0xed, 0xc1, 0x19, 0xd6, 0x4b, 0x55, 0x2d,
	0x97, 0xd5, 0x0b, 0x35, 0xed, 0xd4, 0xec, 0xff, 0x54, 0x2b, 0x88, 0xbf, 0xa3, 0xf6, 0x59, 0xef,
	0xd8, 0x7a, 0x5b, 0x2b, 0x1f, 0x77, 0x87, 0xbf, 0x8e, 0x3a, 0x2d, 0x6c, 0x1e, 0x63, 0x01, 0xe6,
	0xe4, 0xba, 0xdf, 0x39, 0xa9, 0x15, 0xc2, 0x5f, 0x26, 0x3e, 0x37, 0x71, 0xf5, 0xcf, 0x14, 0x14,
	0xcf, 0xa6, 0x01, 0xf3, 0xdc, 0xfe, 0x07, 0x16, 0xd8, 0x37, 0xe8, 0x10, 0xb2, 0x9e, 0x5c, 0x73,
	0x23, 0x25, 0x4b, 0xfb, 0x54, 0x14, 0x2a, 0x49, 0x51, 0x0b, 0x6e, 0xba, 0x81, 0xbf, 0xc0, 0x11,
	0xbb, 0x72, 0x14, 0x05, 0x0a, 0x01, 0xa4, 0xc3, 0xf6, 0x7b, 0xba, 0x90, 0xa2, 0xca, 0x63, 0xf1,
	0x13, 0xed, 0x40, 0x7a, 0x2e, 0x24, 0x21, 0x65, 0x93, 0xc7, 0xe1, 0xe2, 0x68, 0xeb, 0x87, 0x54,
	0xf5, 0xaf, 0x14, 0x94, 0x57, 0x5f, 0x51, 0xf4, 0x3d, 0x64, 0x9c, 0xf0, 0xa5, 0x0d, 0x8f, 0xf1,
	0xec, 0xf6, 0x4b, 0x5b, 0x0f, 0xff, 0x85, 0xe7, 0x50, 0xec, 0x8a, 0x05, 0x85, 0x84, 0xf9, 0x8e,
	0x53, 0xbc, 0x48, 0x9e, 0xa2, 0x70, 0x50, 0x96, 0x4d, 0x26, 0xf5, 0xda, 0x65, 0x3c, 0x48, 0x9c,
	0xaa, 0xf5, 0x31, 0x05, 0x87, 0xb6, 0x37, 0xa9, 0x07, 0xd4, 0xb5, 0xe5, 0x47, 0xa3, 0xe7, 0x10,
	0x9f, 0xf1, 0x3a, 0x9f, 0x52, 0x9b, 0x5d, 0x33, 0x9b, 0x88, 0x6c, 0xeb, 0x64, 0xca, 0x44, 0x88,
	0xe8, 0x53, 0x75, 0x42, 0x5c, 0x32, 0xa6, 0xad, 0x52, 0xd4, 0x31, 0xef, 0xc4, 0x4c, 0xf8, 0xad,
	0x33, 0x66, 0xc1, 0xcd, 0xec, 0xb2, 0x6e, 0x7b, 0x93, 0x86, 0x0a, 0x33, 0xa1, 0xfc, 0xa6, 0xb1,
	0x12, 0xaa, 0xc1, 0xbd, 0x99, 0x6f, 0xd3, 0xc6, 0xd8, 0x6b, 0x90, 0x29, 0x6b, 0xcc, 0xf7, 0x1b,
	0x2a, 0xe8, 0x28, 0x0c, 0x7a, 0x99, 0x91, 0x03, 0xe6, 0xcd, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x45, 0xb8, 0xf6, 0x93, 0x78, 0x0b, 0x00, 0x00,
}
